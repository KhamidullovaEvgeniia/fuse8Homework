// <auto-generated />
using System;
using InternalApi.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InternalApi.DataAccess.Migrations
{
    [DbContext(typeof(CurrencyDbContext))]
    partial class CurrencyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cur")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InternalApi.DataAccess.Models.CurrencyRate", b =>
                {
                    b.Property<int>("Currency")
                        .HasColumnType("integer")
                        .HasColumnName("currency");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric")
                        .HasColumnName("value");

                    b.HasKey("Currency", "Date")
                        .HasName("pk_currency_rates");

                    b.HasIndex("Date")
                        .HasDatabaseName("ix_currency_rates_date");

                    b.ToTable("currency_rates", "cur");
                });

            modelBuilder.Entity("InternalApi.DataAccess.Models.ExchangeDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.HasKey("Id")
                        .HasName("pk_exchange_dates");

                    b.HasAlternateKey("Date")
                        .HasName("ak_exchange_dates_date");

                    b.ToTable("exchange_dates", "cur");
                });

            modelBuilder.Entity("InternalApi.DataAccess.Models.CurrencyRate", b =>
                {
                    b.HasOne("InternalApi.DataAccess.Models.ExchangeDate", "ExchangeDate")
                        .WithMany("CurrencyRates")
                        .HasForeignKey("Date")
                        .HasPrincipalKey("Date")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_currency_rates_exchange_dates_date");

                    b.Navigation("ExchangeDate");
                });

            modelBuilder.Entity("InternalApi.DataAccess.Models.ExchangeDate", b =>
                {
                    b.Navigation("CurrencyRates");
                });
#pragma warning restore 612, 618
        }
    }
}
