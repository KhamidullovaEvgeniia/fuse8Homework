syntax = "proto3";
option csharp_namespace = "InternalApi";
package currency;
// Определение gRPC-сервиса
service CurrencyApi {
  // Получает текущий курс указанной валюты
  rpc GetCurrencyRate (CurrencyRateRequest) returns (CurrencyRateResponse);
  // Получает курс валюты на указанную дату
  rpc GetCurrencyDataWithRate (CurrencyRateOnDateRequest) returns (CurrencyRateOnDateResponse);
  // Получает настройки API
  rpc GetApiSettings (ApiSettingsRequest) returns (ApiSettingsResponse);
}

// Запрос на получение курса валюты
message CurrencyRateRequest {
  string currencyCode = 1; // Код валюты, например, "USD"
}

// Ответ с курсом валюты
message CurrencyRateResponse {
  string currencyCode = 1;  // Код валюты
  double value = 2;         // Значение курса
}

// Запрос на получение курса валюты на дату
message CurrencyRateOnDateRequest {
  string currencyCode = 1; // Код валюты
  string date = 2;         // Дата в формате "yyyy-MM-dd"
}

// Ответ с курсом валюты на дату
message CurrencyRateOnDateResponse {
  string date = 1;          // Дата в формате "yyyy-MM-dd"
  string currencyCode = 2;  // Код валюты
  double value = 3;         // Значение курса
}

// Запрос настроек API (пустой, т.к. параметры не требуются)
message ApiSettingsRequest {}

// Ответ с настройками API
message ApiSettingsResponse {
  string defaultCurrency = 1;   // Валюта по умолчанию
  string baseCurrency = 2;      // Базовая валюта
  int32 requestLimit = 3;       // Лимит запросов
  int32 requestCount = 4;       // Количество использованных запросов
  bool hasRequestsLeft = 5;     // Доступны ли еще запросы (requestLimit > requestCount)
  int32 currencyRoundCount = 6; // Количество знаков после запятой
}