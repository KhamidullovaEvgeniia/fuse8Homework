<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PublicApi</name>
    </assembly>
    <members>
        <member name="T:Fuse8.BackendInternship.PublicApi.Controllers.CurrencyController">
            <summary>
            Методы для получения актуального курс валюты, курса валюты по коду и курс на определенную дату.
            </summary>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.CurrencyController.#ctor(Fuse8.BackendInternship.PublicApi.Interfaces.ICurrencyApiService,Microsoft.Extensions.Options.IOptions{Fuse8.BackendInternship.PublicApi.Settings.CurrencySetting})">
            <summary>
            Конструктор контроллера.
            </summary>
            <param name="currencyApiService">Сервис для получения данных о валюте.</param>
            <param name="currencySetting">Настройки валюты, содержащие валюту по умолчанию, дефолтную валюту и количество знаков после запятой.</param>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.CurrencyController.GetCurrencyRateAsync(System.Threading.CancellationToken)">
            <summary>
            Получает текущий курс валюты по умолчанию.
            </summary>
            <returns>Текущий курс валюты.</returns>
            <response code="200">
            Успешный запрос, возвращает курс валюты.
            </response>
            <response code="404">
            Курс валюты не найден.
            </response>
            <response code="429">
            Превышен лимит запросов.
            </response>
            <response code="500">
            Ошибка сервера.
            </response>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.CurrencyController.GetCurrencyCodeRateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Получает текущий курс указанной валюты.
            </summary>
            <param name="currencyCode">Код валюты (например, "RUB").</param>
            <returns>Текущий курс валюты.</returns>
            <response code="200">
            Успешный запрос, возвращает курс валюты.
            </response>
            <response code="404">
            Курс валюты не найден.
            </response>
            <response code="429">
            Превышен лимит запросов.
            </response>
            <response code="500">
            Ошибка сервера.
            </response>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.CurrencyController.GetDatedCurrencyRateAsync(System.String,System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Получает курс указанной валюты на определенную дату.
            </summary>
            <param name="currencyCode">Код валюты (например, "RUB").</param>
            <param name="date">Дата формата yyyy-MM-dd, на которую требуется курс.</param>
            <returns>Курс валюты на указанную дату.</returns>
            <response code="200">
            Успешный запрос, возвращает курс валюты.
            </response>
            <response code="404">
            Курс валюты не найден.
            </response>
            <response code="429">
            Превышен лимит запросов.
            </response>
            <response code="500">
            Ошибка сервера.
            </response>
        </member>
        <member name="T:Fuse8.BackendInternship.PublicApi.Controllers.FavoriteCurrencyController">
            <summary>
            Методы для операций над Избранными курсами валют
            </summary>
            
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.FavoriteCurrencyController.#ctor(Fuse8.BackendInternship.PublicApi.Interfaces.IFavoriteCurrencyService)">
            <summary>
            Конструктор контроллера.
            </summary>
            <param name="favoriteCurrencyService">Сервис для получения данных об Избранных курсах валют.</param>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.FavoriteCurrencyController.GetFavoriteCurrencyRateByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Получает Избранное по его названию.
            </summary>
            <param name="name">Избранное (например, "RubToEuro").</param>
            <returns>Избранное по его названию.</returns>
            <response code="200">
            Успешный запрос, возвращает Избранное по его названию.
            </response>
            <response code="429">
            Превышен лимит запросов.
            </response>
            <response code="500">
            Ошибка сервера.
            </response>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.FavoriteCurrencyController.GetAllFavoriteCurrencyRatesAsync(System.Threading.CancellationToken)">
            <summary>
            Получает список всех Избранных.
            </summary>
            <returns>Список всех Избранных.</returns>
            <response code="200">
            Успешный запрос, возвращает список всех Избранных.
            </response>
            <response code="429">
            Превышен лимит запросов.
            </response>
            <response code="500">
            Ошибка сервера.
            </response>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.FavoriteCurrencyController.GetSelectedCurrencyRateByName(System.String,System.Threading.CancellationToken)">
            <summary>
            Получает текущий курс для Избранной валюты по её названию.
            </summary>
            <returns>Текущий курс для Избранной валюты по её названию.</returns>
            <response code="200">
            Успешный запрос, возвращает текущий курс для Избранной валюты по её названию.
            </response>
            <response code="429">
            Превышен лимит запросов.
            </response>
            <response code="500">
            Ошибка сервера.
            </response>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.FavoriteCurrencyController.GetSelectedCurrencyRateByDate(System.String,System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Получает курс для Избранного по его названию на конкретную дату.
            </summary>
            <returns>Курс для Избранного по его названию на конкретную дату.</returns>
            <response code="200">
            Успешный запрос, возвращает курс для Избранного по его названию на конкретную дату.
            </response>
            <response code="429">
            Превышен лимит запросов.
            </response>
            <response code="500">
            Ошибка сервера.
            </response>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.FavoriteCurrencyController.AddFavoriteCurrencyRateAsync(Fuse8.BackendInternship.PublicApi.Models.FavoriteCurrencyRateDTO,System.Threading.CancellationToken)">
            <summary>
            Добавляет новое Избранное.
            </summary>
            <response code="200">
            Успешный запрос, добавляет новое Избранное.
            </response>
            <response code="404">
            Курс валюты не найден.
            </response>
            <response code="429">
            Превышен лимит запросов.
            </response>
            <response code="500">
            Ошибка сервера.
            </response>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.FavoriteCurrencyController.UpdateFavoriteCurrencyRateAsync(Fuse8.BackendInternship.PublicApi.Models.FavoriteCurrencyRateDTO,System.Threading.CancellationToken)">
            <summary>
            Изменяет Избранное по его названию.
            </summary>
            <response code="200">
            Успешный запрос, изменяет Избранное по его названию.
            </response>
            /// <response code="404">
            Курс валюты не найден.
            </response>
            <response code="429">
            Превышен лимит запросов.
            </response>
            <response code="500">
            Ошибка сервера.
            </response>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.FavoriteCurrencyController.DeleteFavoriteCurrencyRateByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Удаляет Избранное по его названию.
            </summary>
            <response code="200">
            Успешный запрос, удаляет Избранное по его названию.
            </response>
            <response code="429">
            Превышен лимит запросов.
            </response>
            <response code="500">
            Ошибка сервера.
            </response>
        </member>
        <member name="T:Fuse8.BackendInternship.PublicApi.Controllers.HealthCheckController">
            <summary>
            Методы для проверки работоспособности PublicApi
            </summary>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.HealthCheckController.Check(System.Nullable{System.Boolean})">
            <summary>
            Проверить что API работает
            </summary>
            <param name="checkExternalApi">Необходимо проверить работоспособность внешнего API. Если FALSE или NULL - проверяется работоспособность только текущего API</param>
            <response code="200">
            Возвращает если удалось получить доступ к API
            </response>
            <response code="400">
            Возвращает если удалось не удалось получить доступ к API
            </response>
        </member>
        <member name="T:Fuse8.BackendInternship.PublicApi.Controllers.HealthCheckResult">
            <summary>
            Результат проверки работоспособности API
            </summary>
        </member>
        <member name="P:Fuse8.BackendInternship.PublicApi.Controllers.HealthCheckResult.CheckedOn">
            <summary>
            Дата проверки
            </summary>
        </member>
        <member name="P:Fuse8.BackendInternship.PublicApi.Controllers.HealthCheckResult.Status">
            <summary>
            Статус работоспособности API
            </summary>
        </member>
        <member name="T:Fuse8.BackendInternship.PublicApi.Controllers.HealthCheckResult.CheckStatus">
            <summary>
            Статус API
            </summary>
        </member>
        <member name="F:Fuse8.BackendInternship.PublicApi.Controllers.HealthCheckResult.CheckStatus.Ok">
            <summary>
            API работает
            </summary>
        </member>
        <member name="F:Fuse8.BackendInternship.PublicApi.Controllers.HealthCheckResult.CheckStatus.Failed">
            <summary>
            Ошибка в работе API
            </summary>
        </member>
        <member name="T:Fuse8.BackendInternship.PublicApi.Controllers.SettingsController">
            <summary>
            Метод для получения текущих настроек API.
            </summary>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.SettingsController.#ctor(Fuse8.BackendInternship.PublicApi.Interfaces.ICurrencyApiService)">
            <summary>
            Конструктор контроллера.
            </summary>
            <param name="currencyApiService">Сервис для работы с API валют.</param>
        </member>
        <member name="M:Fuse8.BackendInternship.PublicApi.Controllers.SettingsController.GetSettingsAsync">
            <summary>
            Получает текущие настройки API.
            </summary>
            <returns>Настройки API.</returns>
            <response code="200">Успешный запрос, возвращает настройки API.</response>
            <response code="429">Превышен лимит запросов.</response>
            <response code="500">Ошибка сервера.</response>
        </member>
        <member name="T:Fuse8.BackendInternship.PublicApi.Models.ApiSettings">
            <summary>
            Настройки API.
            </summary>
        </member>
        <member name="P:Fuse8.BackendInternship.PublicApi.Models.ApiSettings.DefaultCurrency">
            <summary>
            Валюта по умолчанию.
            </summary>
        </member>
        <member name="P:Fuse8.BackendInternship.PublicApi.Models.ApiSettings.NewRequestsAvailable">
            <summary>
            Есть ли доступные запросы к API.
            </summary>
        </member>
        <member name="P:Fuse8.BackendInternship.PublicApi.Models.ApiSettings.CurrencyRoundCount">
            <summary>
            Количество знаков после запятой для округления валюты.
            </summary>
        </member>
        <member name="T:Fuse8.BackendInternship.PublicApi.Models.CurrencyRate">
            <summary>
            Курс валюты.
            </summary>
        </member>
        <member name="P:Fuse8.BackendInternship.PublicApi.Models.CurrencyRate.Code">
            <summary>
            Код валюты (например, "RUB").
            </summary>
        </member>
        <member name="P:Fuse8.BackendInternship.PublicApi.Models.CurrencyRate.Value">
            <summary>
            Значение курса валюты.
            </summary>
        </member>
        <member name="T:Fuse8.BackendInternship.PublicApi.Models.DatedCurrencyRate">
            <summary>
            Курс валюты с датой.
            </summary>
        </member>
        <member name="P:Fuse8.BackendInternship.PublicApi.Models.DatedCurrencyRate.Date">
            <summary>
            Дата курса валюты в формате yyyy-MM-dd.
            </summary>
        </member>
        <member name="P:Fuse8.BackendInternship.PublicApi.Models.DatedCurrencyRate.Code">
            <summary>
            Код валюты (например, "RUB").
            </summary>
        </member>
        <member name="P:Fuse8.BackendInternship.PublicApi.Models.DatedCurrencyRate.Value">
            <summary>
            Значение курса валюты.
            </summary>
        </member>
        <member name="F:Currency.DecimalValue.UnitsFieldNumber">
            <summary>Field number for the "units" field.</summary>
        </member>
        <member name="P:Currency.DecimalValue.Units">
            <summary>
            Whole units part of the amount
            </summary>
        </member>
        <member name="F:Currency.DecimalValue.NanosFieldNumber">
            <summary>Field number for the "nanos" field.</summary>
        </member>
        <member name="P:Currency.DecimalValue.Nanos">
            <summary>
            Nano units of the amount (10^-9)
            Must be same sign as units
            </summary>
        </member>
        <member name="T:Currency.CurrencyApiServiceReflection">
            <summary>Holder for reflection information generated from CurrencyApiService.proto</summary>
        </member>
        <member name="P:Currency.CurrencyApiServiceReflection.Descriptor">
            <summary>File descriptor for CurrencyApiService.proto</summary>
        </member>
        <member name="T:Currency.CurrencyRateRequest">
            <summary>
            Запрос на получение курса валюты
            </summary>
        </member>
        <member name="F:Currency.CurrencyRateRequest.BaseCurrencyCodeFieldNumber">
            <summary>Field number for the "baseCurrencyCode" field.</summary>
        </member>
        <member name="P:Currency.CurrencyRateRequest.BaseCurrencyCode">
            <summary>
            Код базовой валюты, относительно которой необходимо вычислить курс, например, "USD"
            </summary>
        </member>
        <member name="F:Currency.CurrencyRateRequest.CurrencyCodeFieldNumber">
            <summary>Field number for the "currencyCode" field.</summary>
        </member>
        <member name="P:Currency.CurrencyRateRequest.CurrencyCode">
            <summary>
            Код валюты, например, "RUB"
            </summary>
        </member>
        <member name="T:Currency.CurrencyRateResponse">
            <summary>
            Ответ с курсом валюты
            </summary>
        </member>
        <member name="F:Currency.CurrencyRateResponse.CurrencyCodeFieldNumber">
            <summary>Field number for the "currencyCode" field.</summary>
        </member>
        <member name="P:Currency.CurrencyRateResponse.CurrencyCode">
            <summary>
            Код валюты, например, "RUB"
            </summary>
        </member>
        <member name="F:Currency.CurrencyRateResponse.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="P:Currency.CurrencyRateResponse.Value">
            <summary>
            Значение курса
            </summary>
        </member>
        <member name="T:Currency.GRPCDateOnly">
            <summary>
            Тип для передачи даты
            </summary>
        </member>
        <member name="F:Currency.GRPCDateOnly.YearFieldNumber">
            <summary>Field number for the "year" field.</summary>
        </member>
        <member name="P:Currency.GRPCDateOnly.Year">
            <summary>
            Год
            </summary>
        </member>
        <member name="F:Currency.GRPCDateOnly.MonthFieldNumber">
            <summary>Field number for the "month" field.</summary>
        </member>
        <member name="P:Currency.GRPCDateOnly.Month">
            <summary>
            Месяц
            </summary>
        </member>
        <member name="F:Currency.GRPCDateOnly.DayFieldNumber">
            <summary>Field number for the "day" field.</summary>
        </member>
        <member name="P:Currency.GRPCDateOnly.Day">
            <summary>
            День
            </summary>
        </member>
        <member name="T:Currency.CurrencyRateOnDateRequest">
            <summary>
            Запрос на получение курса валюты на дату
            </summary>
        </member>
        <member name="F:Currency.CurrencyRateOnDateRequest.BaseCurrencyCodeFieldNumber">
            <summary>Field number for the "baseCurrencyCode" field.</summary>
        </member>
        <member name="P:Currency.CurrencyRateOnDateRequest.BaseCurrencyCode">
            <summary>
            Код базовой валюты, относительно которой необходимо вычислить курс, например, "USD"
            </summary>
        </member>
        <member name="F:Currency.CurrencyRateOnDateRequest.CurrencyCodeFieldNumber">
            <summary>Field number for the "currencyCode" field.</summary>
        </member>
        <member name="P:Currency.CurrencyRateOnDateRequest.CurrencyCode">
            <summary>
            Код валюты, например, "RUB"
            </summary>
        </member>
        <member name="F:Currency.CurrencyRateOnDateRequest.DateFieldNumber">
            <summary>Field number for the "date" field.</summary>
        </member>
        <member name="P:Currency.CurrencyRateOnDateRequest.Date">
            <summary>
            Дата в формате "yyyy-MM-dd"
            </summary>
        </member>
        <member name="T:Currency.CurrencyRateOnDateResponse">
            <summary>
            Ответ с курсом валюты на дату
            </summary>
        </member>
        <member name="F:Currency.CurrencyRateOnDateResponse.DateFieldNumber">
            <summary>Field number for the "date" field.</summary>
        </member>
        <member name="P:Currency.CurrencyRateOnDateResponse.Date">
            <summary>
            Дата в формате "yyyy-MM-dd"
            </summary>
        </member>
        <member name="F:Currency.CurrencyRateOnDateResponse.CurrencyCodeFieldNumber">
            <summary>Field number for the "currencyCode" field.</summary>
        </member>
        <member name="P:Currency.CurrencyRateOnDateResponse.CurrencyCode">
            <summary>
            Код валюты, например, "RUB"
            </summary>
        </member>
        <member name="F:Currency.CurrencyRateOnDateResponse.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="P:Currency.CurrencyRateOnDateResponse.Value">
            <summary>
            Значение курса
            </summary>
        </member>
        <member name="T:Currency.ApiSettingsResponse">
            <summary>
            Ответ с настройками API
            </summary>
        </member>
        <member name="F:Currency.ApiSettingsResponse.HasRequestsLeftFieldNumber">
            <summary>Field number for the "hasRequestsLeft" field.</summary>
        </member>
        <member name="P:Currency.ApiSettingsResponse.HasRequestsLeft">
            <summary>
            Доступны ли еще запросы (requestLimit > requestCount)
            </summary>
        </member>
        <member name="T:Currency.CurrencyApi">
            <summary>
            Определение gRPC-сервиса
            </summary>
        </member>
        <member name="P:Currency.CurrencyApi.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Currency.CurrencyApi.CurrencyApiClient">
            <summary>Client for CurrencyApi</summary>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for CurrencyApi</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for CurrencyApi that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetCurrencyRate(Currency.CurrencyRateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Получает текущий курс указанной валюты
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetCurrencyRate(Currency.CurrencyRateRequest,Grpc.Core.CallOptions)">
            <summary>
            Получает текущий курс указанной валюты
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetCurrencyRateAsync(Currency.CurrencyRateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Получает текущий курс указанной валюты
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetCurrencyRateAsync(Currency.CurrencyRateRequest,Grpc.Core.CallOptions)">
            <summary>
            Получает текущий курс указанной валюты
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetCurrencyDataWithRate(Currency.CurrencyRateOnDateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Получает курс валюты на указанную дату
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetCurrencyDataWithRate(Currency.CurrencyRateOnDateRequest,Grpc.Core.CallOptions)">
            <summary>
            Получает курс валюты на указанную дату
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetCurrencyDataWithRateAsync(Currency.CurrencyRateOnDateRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Получает курс валюты на указанную дату
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetCurrencyDataWithRateAsync(Currency.CurrencyRateOnDateRequest,Grpc.Core.CallOptions)">
            <summary>
            Получает курс валюты на указанную дату
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetApiSettings(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Получает настройки API
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetApiSettings(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            Получает настройки API
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetApiSettingsAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Получает настройки API
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.GetApiSettingsAsync(Google.Protobuf.WellKnownTypes.Empty,Grpc.Core.CallOptions)">
            <summary>
            Получает настройки API
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Currency.CurrencyApi.CurrencyApiClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
    </members>
</doc>
